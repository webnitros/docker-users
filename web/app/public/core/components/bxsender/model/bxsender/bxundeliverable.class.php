<?php

class bxUnDeliverable extends xPDOSimpleObject
{

    /**
     * Считаем количество ошибок доставки после чего автоматически отписывается от всех рассылок
     */
    public function autoUnSubscribed()
    {

        $undeliverable_error_count = (int)$this->xpdo->getOption('bxsender_undeliverable_error_count', null, 2);

        if ($undeliverable_error_count > 0) {
            $email = $this->get('email');
            $count = $this->xpdo->getCount($this->_class, array('email' => $email));
            if ($count >= $undeliverable_error_count) {
                /* @var bxSubscriber $Subscriber */
                if ($Subscriber = $this->xpdo->getObject('bxSubscriber', array('email' => $email, 'active' => 1))) {
                    // TODO необходимо фиксировать почему был отписан пользователь
                    $Subscriber->unSubscribed();
                }
            }
        }
    }

    /** {inheritDoc} */
    public function save($cacheFlag = null)
    {
        if ($this->isNew()) {
            $this->set('createdon', time());
        }

        $this->autoUnSubscribed();
        return parent::save($cacheFlag);
    }


    public function remove(array $ancestors = array())
    {
        /* @var bxSender $bxSender */
        $bxSender = $this->xpdo->getService('bxsender', 'bxSender', MODX_CORE_PATH . 'components/bxsender/model/');
        if ($ReturnPath = $bxSender->loadReturnPath()) {
            // При удалении записи, запись о том что письмо было скачено удаляется автоматически
            $path = $ReturnPath->getName($this->get('token'), '');
            if (file_exists($path)) {
                unlink($path);
            }
        }
        return parent::remove($ancestors); // TODO: Change the autogenerated stub
    }
}